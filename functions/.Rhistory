sf::st_set_geometry(NULL)
tbl_urban_pop <- readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16) %>%
dplyr::select(UA_A3 = `Country\ncode`, urb_pop_2015 = `2015`)
tbl_urban_pop
countries
countries %>% head()
tbl_urban_pop
tbl_urban_pop <- readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16,
col_types = c("text","text","text","text"))
tbl_urban_pop <- readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16)
tbl_urban_pop <- readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16) %>%
dplyr::select(UA_A3 = `Country\ncode`, urb_pop_2015 = `2015`) %>%
merge(countries, by = 'UA_A3')
tbl_urban_pop <- readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16) %>%
dplyr::select(UA_A3 = `Country\ncode`, urb_pop_2015 = `2015`)
tbl_urban_pop
countries
countries
countries %>% head()
tbl_urban_pop <- readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16) %>%
dplyr::select(UN_A3 = `Country\ncode`, urb_pop_2015 = `2015`) %>%
merge(countries, by = 'UN_A3')
tbl_urban_pop
tbl_urban_pop %>% head()
tbl_urban_pop %>% filter(ADM0_A3=='CHN')
tbl_urban_pop <- readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16) %>%
dplyr::select(UN_A3 = `Country\ncode`, urb_pop_2015 = `2015`) %>%
# Convert urban population from thousands to millions
dplyr::mutate(urb_pop_2015 = urb_pop_2015 / 1000) %>%
merge(countries, by = 'UN_A3')
tbl_urban_pop %>% filter(ADM0_A3=='CHN')
# Lookup table (LUT) of country names, ISO3 codes, and 32 regions
tbl_iso_reg32 <- readr::read_csv(
file.path('..', 'data', 'ISO3_countryname_32regions.csv'), show_col_types = F)
# Coefficients of panel regression:
# Urban Land per capita (km2 / mil persons) ~ GDP per capita ($ / person)
tbl_coef <- readr::read_csv(
file.path('..', 'data', 'ulc_vs_gdpc_32regions.csv'), show_col_types = F) %>%
tibble::column_to_rownames('Coefficients')
coef_intercept <- tbl_coef['Intercept', 'Estimate']
coef_gdpc      <- tbl_coef['GDPC',      'Estimate']
# Shared Socioeconomic Pathways (SSPs) forecasts of countries from IIASA
tbl_ssps <- readr::read_csv(
file.path('..', 'data', 'SspDb_country_data_2013-06-12.csv'), show_col_types = F)
tbl_ssps
# Filter population (million)
tbl_pop <- tbl_ssps %>%
dplyr::filter(VARIABLE=='Population' & MODEL=='OECD Env-Growth') %>%
dplyr::mutate(SCENARIO = stringr::str_sub(SCENARIO, 1, 4)) %>%
dplyr::select(-MODEL, -VARIABLE, -UNIT) %>%
tidyr::pivot_longer(cols = `1950`:`2150`, names_to = 'year', values_to = 'population') %>%
dplyr::mutate(year = as.integer(year)) %>%
dplyr::filter(year>=2010 & year<=2100)
# Calculate urban population (million)
tbl_pop_urb <- tbl_ssps %>%
dplyr::filter(VARIABLE=='Population|Urban|Share') %>%
dplyr::mutate(SCENARIO = stringr::str_sub(SCENARIO, 1, 4)) %>%
dplyr::select(-MODEL, -VARIABLE, -UNIT) %>%
tidyr::pivot_longer(cols = `1950`:`2150`, names_to = 'year', values_to = 'urban_share') %>%
dplyr::mutate(year = as.integer(year)) %>%
dplyr::filter(year>=2010 & year<=2100) %>%
merge(tbl_pop, by=c('SCENARIO', 'REGION', 'year')) %>%
dplyr::mutate(urban_pop = population * urban_share / 100) %>%
dplyr::select(-population)
# Filter GDP (billion US$)
tbl_gdp <- tbl_ssps %>%
dplyr::filter(VARIABLE=='GDP|PPP' & MODEL=='OECD Env-Growth') %>%
dplyr::mutate(SCENARIO = stringr::str_sub(SCENARIO, 1, 4)) %>%
dplyr::select(-MODEL, -VARIABLE, -UNIT) %>%
tidyr::pivot_longer(cols = `1950`:`2150`, names_to = 'year', values_to = 'GDP') %>%
dplyr::mutate(year = as.integer(year)) %>%
dplyr::filter(year>=2030 & year<=2100 & year%%10==0)
# Calculate GDP per capita ($ / person)
tbl_gdpc <- merge(tbl_gdp, tbl_pop, by = c('SCENARIO', 'REGION', 'year')) %>%
dplyr::mutate(GDPC = (GDP * 10^9) / (population * 10^6)) %>%
dplyr::select(-GDP, -population)
tbl_gdpc
tbl_urban_pop %>% head()
tbl_pop_urb_2015 <- readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16) %>%
dplyr::select(UN_A3 = `Country\ncode`, urb_pop_2015 = `2015`) %>%
# Convert urban population from thousands to millions
dplyr::mutate(urb_pop_2015 = urb_pop_2015 / 1000) %>%
merge(countries, by = 'UN_A3')
tbl_pop_urb_2015
tbl_pop_urb_2015 %>% head()
# Calculate urban population (million)
tbl_pop_urb <- tbl_ssps %>%
dplyr::filter(VARIABLE=='Population|Urban|Share') %>%
dplyr::mutate(SCENARIO = stringr::str_sub(SCENARIO, 1, 4)) %>%
dplyr::select(-MODEL, -VARIABLE, -UNIT) %>%
tidyr::pivot_longer(cols = `1950`:`2150`, names_to = 'year', values_to = 'urban_share') %>%
dplyr::mutate(year = as.integer(year)) %>%
dplyr::filter(year>=2010 & year<=2100) %>%
merge(tbl_pop, by=c('SCENARIO', 'REGION', 'year')) %>%
dplyr::mutate(urban_pop = population * urban_share / 100) %>%
dplyr::select(-population)
tbl_pop_urb %>% filter(REGION=='CHN')
# Calculate urban population (million)
tbl_pop_urb <- tbl_ssps %>%
dplyr::filter(VARIABLE=='Population|Urban|Share') %>%
dplyr::mutate(SCENARIO = stringr::str_sub(SCENARIO, 1, 4)) %>%
dplyr::select(-MODEL, -VARIABLE, -UNIT) %>%
tidyr::pivot_longer(cols = `1950`:`2150`, names_to = 'year', values_to = 'urban_share') %>%
dplyr::mutate(year = as.integer(year)) %>%
dplyr::filter(year>=2030 & year<=2100 & year%%10==0) %>%
merge(tbl_pop, by=c('SCENARIO', 'REGION', 'year')) %>%
dplyr::mutate(urban_pop = population * urban_share / 100) %>%
dplyr::select(-population)
tbl_pop_urb %>% filter(REGION=='CHN')
tbl_pop_urb %>% filter(REGION=='CHN') %>% head()
tbl_pop_urb_2015 %>% filter(REGION=='CHN') %>% head()
countries <- ne_download(scale = 10, returnclass = 'sf') %>%
dplyr::select(REGION = ADM0_A3, ADMIN, UN_A3) %>%
sf::st_set_geometry(NULL)
tbl_pop_urb_2015 <- readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16) %>%
dplyr::select(UN_A3 = `Country\ncode`, urb_pop_2015 = `2015`) %>%
# Convert urban population from thousands to millions
dplyr::mutate(urb_pop_2015 = urb_pop_2015 / 1000) %>%
merge(countries, by = 'UN_A3')
tbl_pop_urb_2015
tbl_pop_urb_2015 %>% head()
# Filter population (million)
tbl_pop <- tbl_ssps %>%
dplyr::filter(VARIABLE=='Population' & MODEL=='OECD Env-Growth') %>%
dplyr::mutate(SCENARIO = stringr::str_sub(SCENARIO, 1, 4)) %>%
dplyr::select(-MODEL, -VARIABLE, -UNIT) %>%
tidyr::pivot_longer(cols = `1950`:`2150`, names_to = 'year', values_to = 'population') %>%
dplyr::mutate(year = as.integer(year)) %>%
dplyr::filter(year>=2010 & year<=2100)
# Calculate urban population (million)
tbl_pop_urb <- tbl_ssps %>%
dplyr::filter(VARIABLE=='Population|Urban|Share') %>%
dplyr::mutate(SCENARIO = stringr::str_sub(SCENARIO, 1, 4)) %>%
dplyr::select(-MODEL, -VARIABLE, -UNIT) %>%
tidyr::pivot_longer(cols = `1950`:`2150`, names_to = 'year', values_to = 'urban_share') %>%
dplyr::mutate(year = as.integer(year)) %>%
dplyr::filter(year>=2030 & year<=2100 & year%%10==0) %>%
merge(tbl_pop, by=c('SCENARIO', 'REGION', 'year')) %>%
dplyr::mutate(urban_pop = population * urban_share / 100) %>%
dplyr::select(-population)
tbl_pop
# Filter GDP (billion US$)
tbl_gdp <- tbl_ssps %>%
dplyr::filter(VARIABLE=='GDP|PPP' & MODEL=='OECD Env-Growth') %>%
dplyr::mutate(SCENARIO = stringr::str_sub(SCENARIO, 1, 4)) %>%
dplyr::select(-MODEL, -VARIABLE, -UNIT) %>%
tidyr::pivot_longer(cols = `1950`:`2150`, names_to = 'year', values_to = 'GDP') %>%
dplyr::mutate(year = as.integer(year)) %>%
dplyr::filter(year>=2030 & year<=2100 & year%%10==0)
# Calculate GDP per capita ($ / person)
tbl_gdpc <- merge(tbl_gdp, tbl_pop, by = c('SCENARIO', 'REGION', 'year')) %>%
dplyr::mutate(GDPC = (GDP * 10^9) / (population * 10^6)) %>%
dplyr::select(-GDP, -population)
# Filter population (million)
tbl_pop <- tbl_ssps %>%
dplyr::filter(VARIABLE=='Population' & MODEL=='OECD Env-Growth') %>%
dplyr::mutate(SCENARIO = stringr::str_sub(SCENARIO, 1, 4)) %>%
dplyr::select(-MODEL, -VARIABLE, -UNIT) %>%
tidyr::pivot_longer(cols = `1950`:`2150`, names_to = 'year', values_to = 'population') %>%
dplyr::mutate(year = as.integer(year)) %>%
dplyr::filter(year>=2010 & year<=2100)
# Filter GDP (billion US$)
tbl_gdp <- tbl_ssps %>%
dplyr::filter(VARIABLE=='GDP|PPP' & MODEL=='OECD Env-Growth') %>%
dplyr::mutate(SCENARIO = stringr::str_sub(SCENARIO, 1, 4)) %>%
dplyr::select(-MODEL, -VARIABLE, -UNIT) %>%
tidyr::pivot_longer(cols = `1950`:`2150`, names_to = 'year', values_to = 'GDP') %>%
dplyr::mutate(year = as.integer(year)) %>%
dplyr::filter(year>=2010 & year<=2100)
# Calculate GDP per capita ($ / person)
tbl_gdpc <- merge(tbl_gdp, tbl_pop, by = c('SCENARIO', 'REGION', 'year')) %>%
dplyr::mutate(GDPC = (GDP * 10^9) / (population * 10^6)) %>%
dplyr::select(-GDP, -population)
tbl_gdpc
tbl_gdpc %>% head()
# Calculate urban population (million)
tbl_pop_urb <- tbl_ssps %>%
dplyr::filter(VARIABLE=='Population|Urban|Share') %>%
dplyr::mutate(SCENARIO = stringr::str_sub(SCENARIO, 1, 4)) %>%
dplyr::select(-MODEL, -VARIABLE, -UNIT) %>%
tidyr::pivot_longer(cols = `1950`:`2150`, names_to = 'year', values_to = 'urban_share') %>%
dplyr::mutate(year = as.integer(year)) %>%
dplyr::filter(year>=2015 & year<=2100 & year%%10==0) %>%
merge(tbl_pop, by=c('SCENARIO', 'REGION', 'year')) %>%
dplyr::mutate(urban_pop = population * urban_share / 100) %>%
dplyr::select(-population)
# Filter GDP (billion US$)
tbl_gdp <- tbl_ssps %>%
dplyr::filter(VARIABLE=='GDP|PPP' & MODEL=='OECD Env-Growth') %>%
dplyr::mutate(SCENARIO = stringr::str_sub(SCENARIO, 1, 4)) %>%
dplyr::select(-MODEL, -VARIABLE, -UNIT) %>%
tidyr::pivot_longer(cols = `1950`:`2150`, names_to = 'year', values_to = 'GDP') %>%
dplyr::mutate(year = as.integer(year)) %>%
dplyr::filter(year>=2015 & year<=2100)
# Calculate GDP per capita ($ / person)
tbl_gdpc <- merge(tbl_gdp, tbl_pop, by = c('SCENARIO', 'REGION', 'year')) %>%
dplyr::mutate(GDPC = (GDP * 10^9) / (population * 10^6)) %>%
dplyr::select(-GDP, -population)
tbl_gdpc
tbl_gdpc %>% head()
tbl_gdpc %>% filter(year==2015)
tbl_gdpc %>% filter(year==2015 & REGION=='CHN')
tbl_gdpc %>% filter(year==2015 & REGION=='USA')
tbl_gdpc_2015 <- tbl_gdpc %>%
dplyr::filter(SCENARIO=='SSP3' & year=='2015') %>%
dplyr::select(REGION, GDPC_2015 = GDPC)
tbl_gdpc_2015 %>% filter(REGION=='USA')
tbl_pop_urb_2015
# Calculate Urban Land (km2) resulting from increases in GDPC and Urban Pop
tbl_pop_urb_2015 %>% head()
# Calculate Urban Land (km2) resulting from increases in GDPC and Urban Pop
merge(tbl_pop_urb_2015, tbl_pop_urb, by = 'REGION')
# Calculate Urban Land (km2) resulting from increases in GDPC and Urban Pop
merge(tbl_pop_urb_2015, tbl_pop_urb, by = 'REGION') %>% head()
tbl_pop_urb_2015 <- readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16) %>%
dplyr::select(UN_A3 = `Country\ncode`, urban_pop_2015 = `2015`) %>%
# Convert urban population from thousands to millions
dplyr::mutate(urban_pop_2015 = urban_pop_2015 / 1000) %>%
merge(countries, by = 'UN_A3')
# Calculate Urban Land (km2) resulting from increases in GDPC and Urban Pop
merge(tbl_pop_urb_2015, tbl_pop_urb, by = 'REGION') %>% head()
# Calculate Urban Land (km2) resulting from increases in GDPC and Urban Pop
merge(tbl_pop_urb_2015, tbl_pop_urb, by = 'REGION') %>%
dplyr::mutate(urban_pop_incrs = urban_pop - urban_pop_2015) %>% head()
merge(tbl_gdpc_2015, tbl_gdpc, by = 'REGION') %>% head()
merge(tbl_gdpc_2015, tbl_gdpc, by = 'REGION') %>% head()
merge(tbl_gdpc_2015, tbl_gdpc, by = 'REGION') %>%
dplyr::mutate(GDPC_incrs = GDPC - GDPC_2015) %>% head()
# Load urban population density in 2015
tbl_urb_pop_dens <- readr::read_csv(
file.path('..', 'results', 'urban_pop_dens.csv'))
tbl_urb_pop_dens
# Convert urban population density (persons/km2) to urban land / cap (km2/mil)
tbl_ulc_2015 <- tbl_urb_pop_dens_2015 %>%
dplyr::mutate(ULC_2015 = 10^6/urb_pop_dens)
# Load urban population density in 2015 in (persons/km2)
tbl_urb_pop_dens_2015 <- readr::read_csv(
file.path('..', 'results', 'urban_pop_dens.csv'))
# Convert urban population density (persons/km2) to urban land / cap (km2/mil)
tbl_ulc_2015 <- tbl_urb_pop_dens_2015 %>%
dplyr::mutate(ULC_2015 = 10^6/urb_pop_dens)
tbl_ulc_2015
tbl_ulc_2015 %>% filter(REGION=='USA')
tbl_ulc_2015 %>% filter(REGION %in% c('USA','CHN','IND'))
tbl_ulc_2015 %>% filter(REGION %in% c('USA','CHN','IND',))
tbl_ulc_2015 %>% filter(REGION %in% c('USA','CHN','IND','FRA'))
tbl_ulc_2015 %>% filter(REGION %in% c('USA','CHN','IND','FRA','GRB'))
tbl_ulc_2015 %>% filter(REGION %in% c('USA','CHN','IND','FRA','GBR'))
# Convert urban population density (persons/km2) to urban land / cap (km2/mil)
tbl_ulc_2015 <- tbl_urb_pop_dens_2015 %>%
dplyr::mutate(ULC_2015 = 10^6/urb_pop_dens,
urban_land_2015 = urb_land) %>%
dplyr::select(REGION, ends_with('_2015'))
tbl_ulc_2015
# Convert urban population density (persons/km2) to urban land / cap (km2/mil)
tbl_ulc_2015 <- tbl_urb_pop_dens_2015 %>%
dplyr::mutate(ULC_2015 = 10^6/urb_pop_dens,
urban_land_2015 = urb_land) %>%
dplyr::select(REGION, ends_with('_2015')) %>%
tidyr::drop_na()
tbl_ulc_2015
coef_gdpc
merge(tbl_gdpc_2015, tbl_gdpc, by = 'REGION') %>%
dplyr::mutate(GDPC_incrs = GDPC - GDPC_2015) %>%
dplyr::mutate(ULC_incrs = GDPC_incrs * coef_gdpc)
merge(tbl_gdpc_2015, tbl_gdpc, by = 'REGION') %>%
dplyr::mutate(GDPC_incrs = GDPC - GDPC_2015) %>%
dplyr::mutate(ULC_incrs = GDPC_incrs * coef_gdpc) %>% head()
merge(tbl_gdpc_2015, tbl_gdpc, by = 'REGION') %>%
dplyr::mutate(GDPC_incrs = GDPC - GDPC_2015) %>%
dplyr::mutate(ULC_incrs = GDPC_incrs * coef_gdpc) %>% filter(REGION=='CHN')
merge(tbl_gdpc_2015, tbl_gdpc, by = 'REGION') %>%
dplyr::mutate(GDPC_incrs = GDPC - GDPC_2015) %>%
dplyr::mutate(ULC_incrs = GDPC_incrs * coef_gdpc) %>% filter(REGION=='CHN') %>% head()
# Calculate Urban Land (km2) resulting from increases in GDPC and Urban Pop
urban_pop_incrs <- merge(tbl_pop_urb_2015, tbl_pop_urb, by = 'REGION') %>%
dplyr::mutate(urban_pop_incrs = urban_pop - urban_pop_2015)
ULC_incrs <- merge(tbl_gdpc_2015, tbl_gdpc, by = 'REGION') %>%
dplyr::mutate(GDPC_incrs = GDPC - GDPC_2015) %>%
dplyr::mutate(ULC_incrs = GDPC_incrs * coef_gdpc)
ULC_incrs
ULC_incrs %>% head()
# Calculate Urban Land (km2) resulting from increases in GDPC and Urban Pop
tbl_urban_pop_incrs <- merge(tbl_pop_urb_2015, tbl_pop_urb, by = 'REGION') %>%
dplyr::mutate(urban_pop_incrs = urban_pop - urban_pop_2015)
tbl_ULC_incrs <- merge(tbl_gdpc_2015, tbl_gdpc, by = 'REGION') %>%
dplyr::mutate(GDPC_incrs = GDPC - GDPC_2015) %>%
dplyr::mutate(ULC_incrs = GDPC_incrs * coef_gdpc)
tbl_ULC_incrs
tbl_urb_pop_dens_2015
# Load urban population density in 2015 in (persons/km2)
tbl_urb_pop_dens_2015 <- readr::read_csv(
file.path('..', 'results', 'urban_pop_dens.csv')) %>%
tidyr::drop_na()
tbl_urban_land_2015 <- tbl_urb_pop_dens_2015 %>%
dplyr::select(REGION, urb_land_2015 = urb_land)
tbl_urban_land_2015
tbl_ULC_incrs <- merge(tbl_gdpc_2015, tbl_gdpc, by = 'REGION') %>%
dplyr::mutate(GDPC_incrs = GDPC - GDPC_2015) %>%
dplyr::mutate(ULC_incrs = GDPC_incrs * coef_gdpc)
tbl_ULC_incrs
tbl_ULC_incrs %>% head()
library(sf)
library(readr)
library(dplyr)
library(tidyr)
library(tibble)
library(readxl)
library(rstudioapi)
# Set working directory to path of the script
setwd(dirname(getSourceEditorContext()$path))
tbl_ULC_incrs %>% head()
tbl_urban_pop_incrs
tbl_urban_pop_incrs %>% head()
tbl_urban_pop_incrs
tbl_urban_pop_incrs %>% head()
# Calculate Urban Land (km2) resulting from increases in GDPC and Urban Pop
tbl_urban_pop_incrs <- merge(tbl_pop_urb_2015, tbl_pop_urb, by = 'REGION') %>%
dplyr::mutate(urban_pop_incrs = urban_pop - urban_pop_2015) %>%
dplyr::select(-UN_A3, ADMIN)
tbl_ULC_incrs <- merge(tbl_gdpc_2015, tbl_gdpc, by = 'REGION') %>%
dplyr::mutate(GDPC_incrs = GDPC - GDPC_2015) %>%
dplyr::mutate(ULC_incrs = GDPC_incrs * coef_gdpc)
tbl_ULC_incrs %>% head()
tbl_urban_pop_incrs %>% head()
# Calculate Urban Land (km2) resulting from increases in GDPC and Urban Pop
tbl_urban_pop_incrs <- merge(tbl_pop_urb_2015, tbl_pop_urb, by = 'REGION') %>%
dplyr::mutate(urban_pop_incrs = urban_pop - urban_pop_2015) %>%
dplyr::select(-UN_A3, -ADMIN)
tbl_ULC_incrs <- merge(tbl_gdpc_2015, tbl_gdpc, by = 'REGION') %>%
dplyr::mutate(GDPC_incrs = GDPC - GDPC_2015) %>%
dplyr::mutate(ULC_incrs = GDPC_incrs * coef_gdpc)
tbl_ULC_incrs %>% head()
tbl_urban_pop_incrs %>% head()
merge(
tbl_ULC_incrs,
tbl_urban_pop_incrs
)
merge(
tbl_ULC_incrs,
tbl_urban_pop_incrs
) %>% head()
tbl_ULC_incrs %>% head()
tbl_urban_pop_incrs %>% head()
tbl_urban_land_2015
tbl_urban_pop_incrs %>% head()
tbl_ULC_incrs %>% head()
tbl_urban_land_2015 %>% head()
tbl_urban_land_2015 %>%
merge(urban_pop_incrs, by = 'REGION')
tbl_urban_land_2015 %>%
merge(urban_pop_incrs, by = 'REGION') %>% head()
tbl_urban_pop_incrs %>% head()
tbl_ULC_incrs %>% head()
tbl_urban_land_2015 %>%
merge(tbl_urban_pop_incrs, by = 'REGION') %>% head()
tbl_urban_land_2015 %>%
merge(tbl_urban_pop_incrs, by = 'REGION') %>%
merge(tbl_ULC_incrs, by = c('REGION','SCENARIO','year')) %>% head()
tbl_urban_land_2015
tbl_ulc_2015
tbl_urban_land_2015 %>%
merge(tbl_ulc_2015, by = 'REGION')
tbl_urban_land_2015 %>%
merge(tbl_ulc_2015, by = 'REGION') %>%
merge(tbl_urban_pop_incrs, by = 'REGION') %>%
merge(tbl_ULC_incrs, by = c('REGION','SCENARIO','year')) %>% head()
tbl_urban_land_2015 %>%
merge(tbl_ulc_2015, by = 'REGION') %>%
merge(tbl_urban_pop_incrs, by = 'REGION') %>%
merge(tbl_ULC_incrs, by = c('REGION','SCENARIO','year')) %>%
dplyr::mutate(
urban_land_incrs = (ULC_2015+ULC_incrs) * (urban_pop_2015+urban_pop_incrs)) %>% head()
tbl_urban_land_2015 %>%
merge(tbl_ulc_2015, by = 'REGION') %>%
merge(tbl_urban_pop_incrs, by = 'REGION') %>%
merge(tbl_ULC_incrs, by = c('REGION','SCENARIO','year')) %>%
dplyr::mutate(
urban_land_incrs = (ULC_2015+ULC_incrs) * (urban_pop_2015+urban_pop_incrs)) %>%
dplyr::mutate(urban_land = urb_land_2015 + urban_land_incrs)
tbl_urban_land_2015 %>%
merge(tbl_ulc_2015, by = 'REGION') %>%
merge(tbl_urban_pop_incrs, by = 'REGION') %>%
merge(tbl_ULC_incrs, by = c('REGION','SCENARIO','year')) %>%
dplyr::mutate(
urban_land_incrs = (ULC_2015+ULC_incrs) * (urban_pop_2015+urban_pop_incrs)) %>%
dplyr::mutate(urban_land = urb_land_2015 + urban_land_incrs) %>% head()
tbl_urban_land_2015 %>%
merge(tbl_ulc_2015, by = 'REGION') %>%
merge(tbl_urban_pop_incrs, by = 'REGION') %>%
merge(tbl_ULC_incrs, by = c('REGION','SCENARIO','year')) %>%
dplyr::mutate(
urban_land_incrs = (ULC_2015+ULC_incrs) * (urban_pop_2015+urban_pop_incrs)) %>%
dplyr::mutate(urban_land = urb_land_2015 + urban_land_incrs) %>% head()
tbl_urban_land <- tbl_urban_land_2015 %>%
merge(tbl_ulc_2015, by = 'REGION') %>%
merge(tbl_urban_pop_incrs, by = 'REGION') %>%
merge(tbl_ULC_incrs, by = c('REGION','SCENARIO','year')) %>%
dplyr::mutate(
urban_land_incrs = (ULC_2015+ULC_incrs) * (urban_pop_2015+urban_pop_incrs)) %>%
dplyr::mutate(urban_land = urb_land_2015 + urban_land_incrs)
# Output Urban Land (km2)
tbl_urban_land %>%
readr::write_csv(file.path('..', 'results', 'urban_land.csv'))
coef_gdpc
source("/Volumes/GoogleDrive/My Drive/Research_Projects/2017_URBANMOD-ZIPF/v3/URBANMOD-ZIPF/functions/urban_land_setup.R", echo=TRUE)
tbl_urb_pop_dens_2015
tbl_urb_pop_dens_2015 %>% filter(REGION=='BGD')
tbl_ulc_2015
tbl_ulc_2015 %>% filter(REGION=='BGD')
tbl_urban_pop_incrs
tbl_urban_pop_incrs %>% filter(REGION=='BGD')
tbl_pop_urb_2015
tbl_pop_urb_2015 %>% filter(REGION=='BGD')
tbl_pop_urb_2015
readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16) %>%
dplyr::select(UN_A3 = `Country\ncode`, urban_pop_2015 = `2015`)
readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16) %>%
dplyr::select(UN_A3 = `Country\ncode`, urban_pop_2015 = `2015`) %>%
# Convert urban population from thousands to millions
dplyr::mutate(urban_pop_2015 = urban_pop_2015 / 1000) %>%
merge(countries, by = 'UN_A3')
countries <- ne_download(scale = 10, returnclass = 'sf') %>%
dplyr::select(REGION = ADM0_A3, ADMIN, UN_A3) %>%
sf::st_set_geometry(NULL)
tbl_pop_urb_2015 <- readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16) %>%
dplyr::select(UN_A3 = `Country\ncode`, urban_pop_2015 = `2015`) %>%
# Convert urban population from thousands to millions
dplyr::mutate(urban_pop_2015 = urban_pop_2015 / 1000) %>%
merge(countries, by = 'UN_A3')
tbl_pop_urb_2015$urban_pop_2015 %>% summary()
readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16)
tbl_pop_urb_2015
tbl_pop_urb_2015 %>% filter(REGION=='BGD')
tbl_pop_urb_2015 %>% filter(REGION=='CHN')
readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16)
countries
countries %>% filter(REGION=='BGD')
paste(50,3,pad='0')
library(stringr)
tbl_pop_urb_2015 <- readxl::read_xls(
file.path('..', 'data', 'WUP2018-F03-Urban_Population.xls'), skip = 16) %>%
dplyr::select(`Country\ncode`, urban_pop_2015 = `2015`) %>%
dplyr::mutate(UN_A3 = stringr::str_pad(`Country\ncode`, 3, pad = '0')) %>%
# Convert urban population from thousands to millions
dplyr::mutate(urban_pop_2015 = urban_pop_2015 / 1000) %>%
merge(countries, by = 'UN_A3')
tbl_pop_urb_2015
tbl_pop_urb_2015$UN_A3
tbl_pop_urb_2015 %>% filter(REGION=='BGD')
source("/Volumes/GoogleDrive/My Drive/Research_Projects/2017_URBANMOD-ZIPF/v3/URBANMOD-ZIPF/functions/urban_land_quantities.R", echo=TRUE)
source("/Volumes/GoogleDrive/My Drive/Research_Projects/2017_URBANMOD-ZIPF/v3/URBANMOD-ZIPF/functions/urban_land_quantities.R", echo=TRUE)
source("/Volumes/GoogleDrive/My Drive/Research_Projects/2017_URBANMOD-ZIPF/v3/URBANMOD-ZIPF/functions/urban_land_setup.R", echo=TRUE)
source("/Volumes/GoogleDrive/My Drive/Research_Projects/2017_URBANMOD-ZIPF/v3/URBANMOD-ZIPF/functions/urban_land_quantities.R", echo=TRUE)
source("/Volumes/GoogleDrive/My Drive/Research_Projects/2017_URBANMOD-ZIPF/v3/URBANMOD-ZIPF/functions/urban_land_quantities.R", echo=TRUE)
tbl_urban_land <- tbl_urban_land_2015 %>%
merge(tbl_ulc_2015, by = 'REGION') %>%
merge(tbl_urban_pop_incrs, by = 'REGION') %>%
merge(tbl_ULC_incrs, by = c('REGION','SCENARIO','year')) %>%
dplyr::mutate(ULC = ULC_2015 + ULC_incrs) %>%
dplyr::mutate(urban_land = ULC * urban_pop)
source("/Volumes/GoogleDrive/My Drive/Research_Projects/2017_URBANMOD-ZIPF/v3/URBANMOD-ZIPF/functions/urban_land_quantities.R", echo=TRUE)
tbl_urb_pop_dens
tbl_urban_land_2015
tbl_urban_pop
tbl_urban_pop %>% head()
tbl_pop_urb_2015
tbl_pop_urb_2015 %>% head()
tbl_urban_land_2015 %>%
merge(tbl_pop_urb_2015, by = 'REGION')
tbl_urban_land_2015 %>%
merge(tbl_pop_urb_2015, by = 'REGION') %>% head()
# Convert urban population density (persons/km2) to urban land / cap (km2/mil)
tbl_ulc_2015 <- tbl_urban_land_2015 %>%
merge(tbl_pop_urb_2015, by = 'REGION') %>%
dplyr::mutate(ULC_2015 = urb_land_2015 / urban_pop_2015)
tbl_ulc_2015
tbl_ulc_2015 %>% head()
source("/Volumes/GoogleDrive/My Drive/Research_Projects/2017_URBANMOD-ZIPF/v3/URBANMOD-ZIPF/functions/urban_land_quantities.R", echo=TRUE)
# Output Urban Land (km2)
tbl_urban_land %>%
readr::write_csv(file.path('..', 'results', 'urban_land.csv'))
tbl_ulc_2015
tbl_ulc_2015 %>% head()
source("/Volumes/GoogleDrive/My Drive/Research_Projects/2017_URBANMOD-ZIPF/v3/URBANMOD-ZIPF/functions/urban_land_quantities.R", echo=TRUE)
tbl_urban_land
tbl_urban_land %>% head()
tbl_urban_land_2015
tbl_ulc_2015
tbl_urban_pop_incrs
tbl_urban_pop_incrs %>% head()
# Calculate Urban Land (km2) resulting from increases in GDPC and Urban Pop
tbl_urban_pop_incrs <- merge(tbl_pop_urb_2015, tbl_pop_urb, by = 'REGION') %>%
dplyr::mutate(urban_pop_incrs = urban_pop - urban_pop_2015) %>%
dplyr::select(-UN_A3, -ADMIN, -`Country\ncode`)
tbl_urban_pop_incrs %>% head()
source("/Volumes/GoogleDrive/My Drive/Research_Projects/2017_URBANMOD-ZIPF/v3/URBANMOD-ZIPF/functions/urban_land_quantities.R", echo=TRUE)
